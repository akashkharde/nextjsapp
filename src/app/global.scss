$white: #fff;
$black: #000;

.main_heading_ {
    -webkit-background-clip: text;
    background-image: linear-gradient(#fff 30%, #11deeb 100%);
    color: transparent;
    font-weight: 600;
    font-family: 'CerebriSans', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
    font-weight: 600;
  }

  $strings: (
    "WebApp Development"
    "Technical SEO"
    "WebSite Development"
    "ERP Softwares"
);
 


// now for some timing (in seconds)
$durCharFwd: 0.10; // character typed
$durFullGap: 2.00; // time between typed/delete
$durCharBwd: 0.08; // character deleted
$durDoneGap: 1.00; // time between strings

// initializing some variables and functions ✊🏼
$charCount: 0;
$durTotal: 0;

@each $string in $strings {
    $charCount: $charCount + str-length($string);
    $durTotal: $durTotal + (str-length($string) * ($durCharFwd + $durCharBwd)) + $durFullGap + $durDoneGap;
}

@function percent($string, $letter, $modifier) {
    $stringsPast: $string - 1;
    $time: 0;

    @while $stringsPast >0 {
        $time: $time + (($durCharFwd + $durCharBwd) * (str-length(nth($strings, $stringsPast)))) + $durFullGap + $durDoneGap;
        $stringsPast: $stringsPast - 1;
    }

    @if $letter <=str-length(nth($strings, $string)) {
        $time: $time + ($durCharFwd * ($letter - 1));
    }

    @else {
        $time: $time + ($durCharFwd * str-length(nth($strings, $string))) + $durFullGap + ($durCharBwd * ($letter - str-length(nth($strings, $string))));
    }

    @return ($time / $durTotal * 100 + $modifier)+"%";
}

$currentPercentage: 0;

// now THIS is where the magic happens... ✨

$typedAnimationDuration: 9s; // Adjust the duration as needed
$initialDelay: 0ms;
$delayBetweenCycles: 7s;

@keyframes typed {
    @for $i from 1 through length($strings) {
        @for $j from 1 through (str-length(nth($strings, $i)) * 2) {
            /* string #{$i}, char #{$j} */
            @if $j < str-length(nth($strings, $i)) * 2 {
                // not the last character deleted
                #{percent($i, $j, 0)} {
                    @if $j <= str-length(nth($strings, $i)) {
                        content: quote(#{str_slice(nth($strings, $i), 1, $j)});
                    } @else {
                        content: quote(#{str_slice(nth($strings, $i), 1, str-length(nth($strings, $i)) - ($j - str-length(nth($strings, $i))))});
                    }
                }

                #{percent($i, $j + 1, -0.001)} {
                    @if $j <= str-length(nth($strings, $i)) {
                        content: quote(#{str_slice(nth($strings, $i), 1, $j + 1)});
                    } @else {
                        content: quote(#{str_slice(nth($strings, $i), 1, str-length(nth($strings, $i)) - ($j + 1 - str-length(nth($strings, $i))))});
                    }
                }
            } @else {
                @if $i < length($strings) {
                    // not the last string
                    #{percent($i, $j, 0)} {
                        content: "​"; // zero-width space to retain element height
                    }

                    #{percent($i + 1, 1, -0.001)} {
                        content: "​"; // zero-width space to retain element height
                    }
                } @else {
                    // last string
                    #{percent($i, $j, 0)} {
                        content: "​"; // zero-width space to retain element height
                    }

                    100% {
                        content: "​"; // zero-width space to retain element height
                    }
                }
            }
        }
    }
}


@keyframes beam-blink {
    0% {
        border-color: transparent;
    }

    75% {
        border-color: transparent;
    }

    100% {
        border-color: transparent;
    }
}


* {
    backface-visibility: hidden;
}

.typewriter {
    font-size: 24px ;
    padding: 20px 5px;
    color: #fff !important;
    letter-spacing: 2px;
    &::after {
        content: "​";
        position: relative;
        top: 0px;
        display: inline-block;
        padding-right: 2px;
        padding-right: calc(1px + 0.1vw);
        border-right: 10px solid rgba(#ffffff, 0.75);
        border-right: 9px solid rgba(#fff, 0.75);
        text-shadow: 0 0 5px rgba(0, 0, 0, 0.75);
        white-space: nowrap;
        animation: typed $typedAnimationDuration linear $initialDelay infinite, beam-blink 0s infinite;
    }

}
@keyframes typewriter {
    0% {
        width: 0
    }

    25% {
        width: 70%
    }

    48% {
        width: 100%
    }

    50% {
        width: 100%
    }

    55% {
        width: 100%
    }

    75% {
        width: 70%;
    }

    85% {
        width: 30%;
    }

    100% {
        width: 0;
    }
}




